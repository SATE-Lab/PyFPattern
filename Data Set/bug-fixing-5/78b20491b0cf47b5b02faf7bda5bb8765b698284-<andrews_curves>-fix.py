@deprecate_kwarg(old_arg_name='data', new_arg_name='frame')
def andrews_curves(frame, class_column, ax=None, samples=200, color=None, colormap=None, **kwargs):
    '\n    Generate a matplotlib plot of Andrews curves, for visualising clusters of\n    multivariate data.\n\n    Andrews curves have the functional form:\n\n    f(t) = x_1/sqrt(2) + x_2 sin(t) + x_3 cos(t) +\n           x_4 sin(2t) + x_5 cos(2t) + ...\n\n    Where x coefficients correspond to the values of each dimension and t is\n    linearly spaced between -pi and +pi. Each row of frame then corresponds to\n    a single curve.\n\n    Parameters\n    ----------\n    frame : DataFrame\n        Data to be plotted, preferably normalized to (0.0, 1.0).\n    class_column : Name of the column containing class names\n    ax : matplotlib axes object, default None\n    samples : Number of points to plot in each curve\n    color : list or tuple, optional\n        Colors to use for the different classes.\n    colormap : str or matplotlib colormap object, default None\n        Colormap to select colors from. If string, load colormap with that name\n        from matplotlib.\n    **kwargs\n        Options to pass to matplotlib plotting method.\n\n    Returns\n    -------\n    class:`matplotlip.axis.Axes`\n    '
    plot_backend = _get_plot_backend('matplotlib')
    return plot_backend.andrews_curves(frame=frame, class_column=class_column, ax=ax, samples=samples, color=color, colormap=colormap, **kwargs)