def __init__(self):
    self.module_arg_spec = dict(resource_group=dict(type='str', required=True), name=dict(type='str', required=True), custom_data=dict(type='str'), state=dict(choices=['present', 'absent'], default='present', type='str'), location=dict(type='str'), short_hostname=dict(type='str'), vm_size=dict(type='str'), admin_username=dict(type='str'), admin_password=dict(type='str', no_log=True), ssh_password_enabled=dict(type='bool', default=True), ssh_public_keys=dict(type='list'), image=dict(type='raw'), availability_set=dict(type='str'), storage_account_name=dict(type='str', aliases=['storage_account']), storage_container_name=dict(type='str', aliases=['storage_container'], default='vhds'), storage_blob_name=dict(type='str', aliases=['storage_blob']), os_disk_caching=dict(type='str', aliases=['disk_caching'], choices=['ReadOnly', 'ReadWrite']), os_disk_size_gb=dict(type='int'), managed_disk_type=dict(type='str', choices=['Standard_LRS', 'StandardSSD_LRS', 'Premium_LRS']), os_disk_name=dict(type='str'), os_type=dict(type='str', choices=['Linux', 'Windows'], default='Linux'), public_ip_allocation_method=dict(type='str', choices=['Dynamic', 'Static', 'Disabled'], default='Static', aliases=['public_ip_allocation']), open_ports=dict(type='list'), network_interface_names=dict(type='list', aliases=['network_interfaces'], elements='raw'), remove_on_absent=dict(type='list', default=['all']), virtual_network_resource_group=dict(type='str'), virtual_network_name=dict(type='str', aliases=['virtual_network']), subnet_name=dict(type='str', aliases=['subnet']), allocated=dict(type='bool', default=True), restarted=dict(type='bool', default=False), started=dict(type='bool', default=True), generalized=dict(type='bool', default=False), data_disks=dict(type='list'), plan=dict(type='dict'), zones=dict(type='list'), accept_terms=dict(type='bool', default=False), license_type=dict(type='str', choices=['Windows_Server', 'Windows_Client']), vm_identity=dict(type='str', choices=['SystemAssigned']), winrm=dict(type='list'), boot_diagnostics=dict(type='dict'))
    self.resource_group = None
    self.name = None
    self.custom_data = None
    self.state = None
    self.location = None
    self.short_hostname = None
    self.vm_size = None
    self.admin_username = None
    self.admin_password = None
    self.ssh_password_enabled = None
    self.ssh_public_keys = None
    self.image = None
    self.availability_set = None
    self.storage_account_name = None
    self.storage_container_name = None
    self.storage_blob_name = None
    self.os_type = None
    self.os_disk_caching = None
    self.os_disk_size_gb = None
    self.managed_disk_type = None
    self.os_disk_name = None
    self.network_interface_names = None
    self.remove_on_absent = set()
    self.tags = None
    self.force = None
    self.public_ip_allocation_method = None
    self.open_ports = None
    self.virtual_network_resource_group = None
    self.virtual_network_name = None
    self.subnet_name = None
    self.allocated = None
    self.restarted = None
    self.started = None
    self.generalized = None
    self.differences = None
    self.data_disks = None
    self.plan = None
    self.accept_terms = None
    self.zones = None
    self.license_type = None
    self.vm_identity = None
    self.boot_diagnostics = None
    self.results = dict(changed=False, actions=[], powerstate_change=None, ansible_facts=dict(azure_vm=None))
    super(AzureRMVirtualMachine, self).__init__(derived_arg_spec=self.module_arg_spec, supports_check_mode=True)