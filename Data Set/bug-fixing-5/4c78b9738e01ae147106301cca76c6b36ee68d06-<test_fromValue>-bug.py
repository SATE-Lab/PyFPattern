def test_fromValue(self):
    nans = Series(np.NaN, index=self.ts.index)
    assert (nans.dtype == np.float_)
    assert (len(nans) == len(self.ts))
    strings = Series('foo', index=self.ts.index)
    assert (strings.dtype == np.object_)
    assert (len(strings) == len(self.ts))
    d = datetime.now()
    dates = Series(d, index=self.ts.index)
    assert (dates.dtype == 'M8[ns]')
    assert (len(dates) == len(self.ts))
    categorical = Series(0, index=self.ts.index, dtype='category')
    expected = Series(0, index=self.ts.index).astype('category')
    assert (categorical.dtype == 'category')
    assert (len(categorical) == len(self.ts))
    tm.assert_series_equal(categorical, expected)