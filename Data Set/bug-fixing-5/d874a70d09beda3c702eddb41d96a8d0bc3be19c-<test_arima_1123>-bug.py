def test_arima_1123():
    np.random.seed(12345)
    arparams = np.array([0.75, (- 0.25)])
    maparams = np.array([0.65, 0.35])
    arparam = np.r_[(1, (- arparams))]
    maparam = np.r_[(1, maparams)]
    nobs = 20
    dates = pd.date_range(start='1980', periods=nobs, freq='A')
    y = arma_generate_sample(arparams, maparams, nobs)
    X = np.random.randn(nobs)
    y += (5 * X)
    mod = ARMA(y[:(- 1)], order=(1, 0), exog=X[:(- 1)])
    res = mod.fit(trend='nc', disp=False)
    fc = res.forecast(exog=X[(- 1):])
    assert_almost_equal(fc[0], 2.200393, 6)
    assert_almost_equal(fc[1], 1.030743, 6)
    assert_almost_equal(fc[2][(0, 0)], 0.180175, 6)
    assert_almost_equal(fc[2][(0, 1)], 4.220611, 6)
    mod = ARMA(y[:(- 1)], order=(1, 1), exog=X[:(- 1)])
    res = mod.fit(trend='nc', disp=False)
    fc = res.forecast(exog=X[(- 1):])
    assert_almost_equal(fc[0], 2.765688, 6)
    assert_almost_equal(fc[1], 0.835048, 6)
    assert_almost_equal(fc[2][(0, 0)], 1.129023, 6)
    assert_almost_equal(fc[2][(0, 1)], 4.402353, 6)
    mod = ARMA(y[:(- 1)], order=(1, 0), exog=X[:(- 1)])
    res = mod.fit(trend='c', disp=False)
    fc = res.forecast(exog=X[(- 1):])
    assert_almost_equal(fc[0], 2.481219, 6)
    assert_almost_equal(fc[1], 0.968759, 6)
    assert_almost_equal(fc[2][0], [0.582485, 4.379952], 6)