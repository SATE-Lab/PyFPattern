def init(self, key, value):
    " Initializes a single or a sequence of key-value pairs into the store.\n\n        For each key, one must `init` it before calling `push` or `pull`.\n        When multiple workers invoke `init` for the same key, only\n        the value supplied by worker with rank `0` is used. This function returns\n        after data has been initialized successfully.\n\n        Parameters\n        ----------\n        key : int or sequence of int\n            The keys.\n        value : NDArray or sequence of NDArray\n            Values corresponding to the keys.\n\n        Examples\n        --------\n        >>> # init a single key-value pair\n        >>> shape = (2,3)\n        >>> kv = mx.kv.create('local')\n        >>> kv.init(3, mx.nd.ones(shape)*2)\n        >>> a = mx.nd.zeros(shape)\n        >>> kv.pull(3, out=a)\n        >>> print a.asnumpy()\n        [[ 2.  2.  2.]\n        [ 2.  2.  2.]]\n\n        >>> # init a list of key-value pairs\n        >>> keys = [5, 7, 9]\n        >>> kv.init(keys, [mx.nd.ones(shape)]*len(keys))\n        "
    (ckeys, cvals) = _ctype_key_value(key, value)
    check_call(_LIB.MXKVStoreInit(self.handle, mx_uint(len(ckeys)), ckeys, cvals))