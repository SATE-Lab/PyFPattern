def scatter_matrix(frame, alpha=0.5, figsize=None, ax=None, grid=False, diagonal='hist', marker='.', density_kwds=None, hist_kwds=None, range_padding=0.05, **kwargs):
    "\n    Draw a matrix of scatter plots.\n\n    Parameters\n    ----------\n    frame : DataFrame\n    alpha : float, optional\n        Amount of transparency applied.\n    figsize : (float,float), optional\n        A tuple (width, height) in inches.\n    ax : Matplotlib axis object, optional\n    grid : bool, optional\n        Setting this to True will show the grid.\n    diagonal : {'hist', 'kde'}\n        Pick between 'kde' and 'hist' for either Kernel Density Estimation or\n        Histogram plot in the diagonal.\n    marker : str, optional\n        Matplotlib marker type, default '.'.\n    density_kwds : keywords\n        Keyword arguments to be passed to kernel density estimate plot.\n    hist_kwds : keywords\n        Keyword arguments to be passed to hist function.\n    range_padding : float, default 0.05\n        Relative extension of axis range in x and y with respect to\n        (x_max - x_min) or (y_max - y_min).\n    **kwargs\n        Keyword arguments to be passed to scatter function.\n\n    Returns\n    -------\n    numpy.ndarray\n        A matrix of scatter plots.\n\n    Examples\n    --------\n    >>> df = pd.DataFrame(np.random.randn(1000, 4), columns=['A','B','C','D'])\n    >>> scatter_matrix(df, alpha=0.2)\n    "
    plot_backend = _get_plot_backend('matplotlib')
    return plot_backend.scatter_matrix(frame=frame, alpha=alpha, figsize=figsize, ax=ax, grid=grid, diagonal=diagonal, marker=marker, density_kwds=density_kwds, hist_kwds=hist_kwds, range_padding=range_padding, **kwargs)