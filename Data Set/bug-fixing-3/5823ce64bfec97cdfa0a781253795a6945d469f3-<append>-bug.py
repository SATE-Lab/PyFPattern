@set_module('mxnet.symbol.numpy')
def append(arr, values, axis=None):
    '\n    Append values to the end of an array.\n\n    Parameters\n    ----------\n    arr : ndarray\n        Values are appended to a copy of this array.\n    values : ndarray\n        These values are appended to a copy of `arr`.  It must be of the\n        correct shape (the same shape as `arr`, excluding `axis`).  If\n        `axis` is not specified, `values` can be any shape and will be\n        flattened before use.\n    axis : int, optional\n        The axis along which `values` are appended.  If `axis` is not\n        given, both `arr` and `values` are flattened before use.\n\n    Returns\n    -------\n    append : ndarray\n        A copy of `arr` with `values` appended to `axis`.  Note that\n        `append` does not occur in-place: a new array is allocated and\n        filled.  If `axis` is None, `out` is a flattened array.\n\n    Examples\n    --------\n    >>> np.append(np.array([1, 2, 3]), np.array([[4, 5, 6],[7, 8, 9]]))\n    array([1., 2., 3., 4., 5., 6., 7., 8., 9.])\n\n    When `axis` is specified, `values` must have the correct shape.\n\n    >>> np.append(np.array([[1, 2, 3], [4, 5, 6]]), np.array([[7, 8, 9]]), axis=0)\n    array([[1., 2., 3.],\n           [4., 5., 6.],\n           [7., 8., 9.]])\n    '
    return _npi.concatenate(arr, values, axis=axis, out=None)