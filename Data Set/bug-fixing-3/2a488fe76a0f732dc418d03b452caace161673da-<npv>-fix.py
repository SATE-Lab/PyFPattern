@array_function_dispatch(_npv_dispatcher)
def npv(rate, values):
    '\n    Returns the NPV (Net Present Value) of a cash flow series.\n\n    .. deprecated:: 1.18\n\n       `npv` is deprecated; for details, see NEP 32 [1]_.\n       Use the corresponding function in the numpy-financial library,\n       https://pypi.org/project/numpy-financial.\n\n    Parameters\n    ----------\n    rate : scalar\n        The discount rate.\n    values : array_like, shape(M, )\n        The values of the time series of cash flows.  The (fixed) time\n        interval between cash flow "events" must be the same as that for\n        which `rate` is given (i.e., if `rate` is per year, then precisely\n        a year is understood to elapse between each cash flow event).  By\n        convention, investments or "deposits" are negative, income or\n        "withdrawals" are positive; `values` must begin with the initial\n        investment, thus `values[0]` will typically be negative.\n\n    Returns\n    -------\n    out : float\n        The NPV of the input cash flow series `values` at the discount\n        `rate`.\n\n    Warnings\n    --------\n    ``npv`` considers a series of cashflows starting in the present (t = 0).\n    NPV can also be defined with a series of future cashflows, paid at the\n    end, rather than the start, of each period. If future cashflows are used,\n    the first cashflow `values[0]` must be zeroed and added to the net\n    present value of the future cashflows. This is demonstrated in the\n    examples.\n\n    Notes\n    -----\n    Returns the result of: [2]_\n\n    .. math :: \\sum_{t=0}^{M-1}{\\frac{values_t}{(1+rate)^{t}}}\n\n    References\n    ----------\n    .. [1] NumPy Enhancement Proposal (NEP) 32,\n       https://numpy.org/neps/nep-0032-remove-financial-functions.html\n    .. [2] L. J. Gitman, "Principles of Managerial Finance, Brief," 3rd ed.,\n       Addison-Wesley, 2003, pg. 346.\n\n    Examples\n    --------\n    Consider a potential project with an initial investment of $40 000 and\n    projected cashflows of $5 000, $8 000, $12 000 and $30 000 at the end of\n    each period discounted at a rate of 8% per period. To find the project\'s\n    net present value:\n\n    >>> rate, cashflows = 0.08, [-40_000, 5_000, 8_000, 12_000, 30_000]\n    >>> np.npv(rate, cashflows).round(5)\n    3065.22267\n\n    It may be preferable to split the projected cashflow into an initial\n    investment and expected future cashflows. In this case, the value of\n    the initial cashflow is zero and the initial investment is later added\n    to the future cashflows net present value:\n\n    >>> initial_cashflow = cashflows[0]\n    >>> cashflows[0] = 0\n    >>> np.round(np.npv(rate, cashflows) + initial_cashflow, 5)\n    3065.22267\n\n    '
    values = np.asarray(values)
    return (values / ((1 + rate) ** np.arange(0, len(values)))).sum(axis=0)