def mean_poisson_deviance(y_true, y_pred, sample_weight=None):
    'Mean Poisson deviance regression loss.\n\n    Poisson deviance is equivalent to the Tweedie deviance with\n    the power parameter `p=1`.\n\n    Read more in the :ref:`User Guide <mean_tweedie_deviance>`.\n\n    Parameters\n    ----------\n    y_true : array-like of shape (n_samples,)\n        Ground truth (correct) target values. Requires y_true â‰¥ 0.\n\n    y_pred : array-like of shape (n_samples,)\n        Estimated target values. Requires y_pred > 0.\n\n    sample_weight : array-like, shape (n_samples,), optional\n        Sample weights.\n\n    Returns\n    -------\n    loss : float\n        A non-negative floating point value (the best value is 0.0).\n\n    Examples\n    --------\n    >>> from sklearn.metrics import mean_poisson_deviance\n    >>> y_true = [2, 0, 1, 4]\n    >>> y_pred = [0.5, 0.5, 2., 2.]\n    >>> mean_poisson_deviance(y_true, y_pred)\n    1.4260...\n    '
    return mean_tweedie_deviance(y_true, y_pred, sample_weight=sample_weight, p=1)